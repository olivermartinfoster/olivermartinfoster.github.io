(this.webpackJsonpcalculator=this.webpackJsonpcalculator||[]).push([[0],{58:function(t,e,n){},59:function(t,e,n){},71:function(t,e){},75:function(t,e,n){"use strict";n.r(e);var i=n(0),a=n.n(i),s=n(7),r=n.n(s),c=(n(58),n(59),n(31)),u=n(6),l=n(16),o=n(14),b=n(104),d=n(19),j={settings:{consumedCarbs:0,currentBg:5,minimumUnit:.5,carbsPerUnit:9,bgPerUnit:2.9,targetBg:5,unitAdjustmentPercentage:0,carbsPerColumnWeight:0,columnWeight:100,totalPacketWeight:100,totalPieces:8,consumedPieces:8,minimumCarbs:1},insulinUnits:{consumedCarbs:null,currentBg:null,unitAdjustmentPercentage:null,minimumUnit:null,carbsPerUnit:null,bgPerUnit:null,targetBg:null,unitAdjustmentRatio:0,bgDistance:0,bgUnits:0,carbUnits:0,totalUnits:0,adjustedTotalUnits:0,roundedAdjustedTotalUnits:0},proportionateCarbs:{carbsPerColumnWeight:null,columnWeight:null,totalPacketWeight:null,totalPieces:null,consumedPieces:null,minimumCarbs:null,carbRatio:0,weightRatio:0,consumedRatio:0,consumedCarbs:0,roundedConsumedCarbs:0}},g=Object(d.b)({name:"insulinUnits",initialState:j.insulinUnits,reducers:{allInsulinUnitsChanged:function(t,e){!function(t,e){Object.assign(t,e);var n=t.consumedCarbs,i=t.currentBg,a=t.unitAdjustmentPercentage,s=t.targetBg,r=t.carbsPerUnit,c=t.bgPerUnit,u=t.minimumUnit,l=1+a/100,o=i-s,b=c?o/c:0,d=r?n/r:0,j=b+d,g=j*l,m=Math.round(g/u)*u;Object.assign(t,{consumedCarbs:n,currentBg:i,unitAdjustmentPercentage:a,targetBg:s,carbsPerUnit:r,bgPerUnit:c,unitAdjustmentRatio:l,bgDistance:o,bgUnits:b,carbUnits:d,totalUnits:j,adjustedTotalUnits:g,roundedAdjustedTotalUnits:m})}(t,e.payload)}}}),m=g.actions.allInsulinUnitsChanged,h=g.reducer,p=n(103);function O(t){return t=(t=String(t)).replace(/x/i,"*"),Object(p.a)(t)}function C(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i={};for(var a in n)n[a]=O(n[a]);for(var s in t){var r,c;i[s]=null!==(r=null!==(c=n[s])&&void 0!==c?c:t[s])&&void 0!==r?r:e[s]}return i}function P(t){var e={},n={};for(var a in t){var s=Object(i.useState)(t[a]),r=Object(o.a)(s,2);e[a]=r[0],n[a]=r[1]}return[e,n]}var v=n(44);function _(t,e,n,i,a){return function(s,r){var c=r.target.value;n[s](c);try{i(a(C(t,e,Object(v.a)({},s,c||e[s]))))}catch(u){}}}function x(t,e){return function(n,i){""===i.target.value&&t[n](e[n])}}var U=n(2),B=void 0,f=function(){var t=Object(l.c)((function(t){return t.insulinUnits})),e=Object(l.c)((function(t){return t.settings})),n=C(t,e),i=P(n),a=Object(o.a)(i,2),s=a[0],r=a[1],c=_(t,e,r,Object(l.b)(),m),u=x(r,n);return Object(U.jsxs)("section",{className:"insulinunits",children:[Object(U.jsxs)("div",{className:"insulinunits__output",children:[Object(U.jsx)("div",{children:"Insulin calculator"}),t.roundedAdjustedTotalUnits||0,"units"]}),Object(U.jsxs)("div",{className:"insulinunits_input",children:[Object(U.jsx)("div",{className:"insulinunits__input__consumedcarbs",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Carbs (g)",onChange:c.bind(B,"consumedCarbs"),onBlur:u.bind(B,"consumedCarbs"),value:s.consumedCarbs})}),Object(U.jsx)("div",{className:"insulinunits__input__currentbg",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Current Bg (mmol/l)",onChange:c.bind(B,"currentBg"),onBlur:u.bind(B,"currentBg"),value:s.currentBg})}),Object(U.jsx)("div",{className:"insulinunits__input__unitadjustmentpercentage",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Adjustment %",onChange:c.bind(B,"unitAdjustmentPercentage"),onBlur:u.bind(B,"unitAdjustmentPercentage"),value:s.unitAdjustmentPercentage})}),Object(U.jsx)("div",{className:"insulinunits__input__carbsperunit",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Carbs per unit (g)",onChange:c.bind(B,"carbsPerUnit"),onBlur:u.bind(B,"carbsPerUnit"),value:s.carbsPerUnit})}),Object(U.jsx)("div",{className:"insulinunits__input__bgperunit",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Bg per unit (mmol/l)",onChange:c.bind(B,"bgPerUnit"),onBlur:u.bind(B,"bgPerUnit"),value:s.bgPerUnit})}),Object(U.jsx)("div",{className:"insulinunits__input__targetbg",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Target Bg (mmol/l)",onChange:c.bind(B,"targetBg"),onBlur:u.bind(B,"targetBg"),value:s.targetBg})})]})]})},W=Object(d.b)({name:"proportionateCarbs",initialState:j.proportionateCarbs,reducers:{allProportionateCarbsChanged:function(t,e){!function(t,e){Object.assign(t,e);var n=t.carbsPerColumnWeight,i=t.columnWeight,a=t.totalPacketWeight,s=t.totalPieces,r=t.consumedPieces,c=t.minimumCarbs,u=i?n/i:0,l=i?a/i:0,o=s?r/s:0,b=u*l*o*a,d=Math.round(b/c)*c;Object.assign(t,{carbsPerColumnWeight:n,columnWeight:i,totalPacketWeight:a,totalPieces:s,consumedPieces:r,minimumCarbs:c,carbRatio:u,weightRatio:l,consumedRatio:o,consumedCarbs:b,roundedConsumedCarbs:d})}(t,e.payload)}}}),N=W.actions.allProportionateCarbsChanged,A=W.reducer,k=void 0,w=function(){var t=Object(l.c)((function(t){return t.proportionateCarbs})),e=Object(l.c)((function(t){return t.settings})),n=C(t,e),i=P(n),a=Object(o.a)(i,2),s=a[0],r=a[1],c=_(t,e,r,Object(l.b)(),N),u=x(r,n);return Object(U.jsxs)("section",{className:"proportionatecarbs",children:[Object(U.jsxs)("div",{className:"proportionatecarbs__output",children:[Object(U.jsx)("div",{children:"Consumed carbohydrates"}),t.roundedConsumedCarbs||0,"g"]}),Object(U.jsxs)("div",{className:"proportionatecarbs_input",children:[Object(U.jsx)("div",{className:"proportionatecarbs__input__columnweight",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Per weight (g)",onChange:c.bind(k,"columnWeight"),onBlur:u.bind(k,"columnWeight"),value:s.columnWeight})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__carbspercolumnweight",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Carbs per weight (g)",onChange:c.bind(k,"carbsPerColumnWeight"),onBlur:u.bind(k,"carbsPerColumnWeight"),value:s.carbsPerColumnWeight})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__totalpacketweight",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Total weight (g)",onChange:c.bind(k,"totalPacketWeight"),onBlur:u.bind(k,"totalPacketWeight"),value:s.totalPacketWeight})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__totalpieces",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Pieces",onChange:c.bind(k,"totalPieces"),onBlur:u.bind(k,"totalPieces"),value:s.totalPieces})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__consumedpieces",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Consumed pieces",onChange:c.bind(k,"consumedPieces"),onBlur:u.bind(k,"consumedPieces"),value:s.consumedPieces})})]})]})},T=Object(d.b)({name:"settings",initialState:j.settings,reducers:{}}).reducer,R=Object(d.a)({reducer:{settings:T,insulinUnits:h,proportionateCarbs:A}});var S=function(){return Object(U.jsx)(l.a,{store:R,children:Object(U.jsx)(c.a,{children:Object(U.jsxs)("div",{className:"App",children:[Object(U.jsx)("nav",{children:Object(U.jsxs)("ul",{children:[Object(U.jsx)("li",{children:Object(U.jsx)(c.b,{to:"/",children:"Home"})}),Object(U.jsx)("li",{children:Object(U.jsx)(c.b,{to:"/insulinunits",children:"Units"})}),Object(U.jsx)("li",{children:Object(U.jsx)(c.b,{to:"/proportionatecarbs",children:"Carbs"})})]})}),Object(U.jsxs)(u.c,{children:[Object(U.jsx)(u.a,{path:"/insulinunits",children:Object(U.jsx)(f,{})}),Object(U.jsx)(u.a,{path:"/proportionatecarbs",children:Object(U.jsx)(w,{})})]})]})})})},y=function(t){t&&t instanceof Function&&n.e(3).then(n.bind(null,105)).then((function(e){var n=e.getCLS,i=e.getFID,a=e.getFCP,s=e.getLCP,r=e.getTTFB;n(t),i(t),a(t),s(t),r(t)}))};r.a.render(Object(U.jsx)(a.a.StrictMode,{children:Object(U.jsx)(S,{})}),document.getElementById("root")),y()}},[[75,1,2]]]);
//# sourceMappingURL=main.f0ca1515.chunk.js.map