(this.webpackJsonpcalculator=this.webpackJsonpcalculator||[]).push([[0],{100:function(e,t,n){},111:function(e,t){},115:function(e,t,n){"use strict";n.r(t);var i=n(0),s=n.n(i),a=n(11),r=n.n(a),o=(n(98),n(23)),c=n.n(o),l=n(63),u=n(41),d=n(33),b=n(18),j=(n(100),n(31)),p=n(14),m=n(32);function h(e){if(!e)return e;var t={};for(var n in e)n.startsWith("ui_")||(t[n]=e[n],t["ui_".concat(n)]=e[n]);return t}var g,O=h({version:"0.0.11",needsUpdating:!1,consumedCarbs:0,currentBg:5,minimumUnits:.1,carbsPerUnit:0,bgPerUnit:0,targetBg:5,unitAdjustmentPercentage:0,carbsPerColumnWeight:0,columnWeight:100,totalPacketWeight:100,totalPieces:8,consumedPieces:8,minimumCarbs:.1}),x=(g=h(JSON.parse(localStorage.getItem("settings")||"null"))||{},Object(d.a)(Object(d.a)({},g),{},{version:null}));for(var v in O){var f;x[v]=null!==(f=null===x||void 0===x?void 0:x[v])&&void 0!==f?f:O[v]}var _={view:{title:""},settings:x,insulinUnits:{consumedCarbs:null,currentBg:null,unitAdjustmentPercentage:null,minimumUnits:null,carbsPerUnit:null,bgPerUnit:null,targetBg:null,ui_consumedCarbs:null,ui_currentBg:null,ui_unitAdjustmentPercentage:null,ui_minimumUnits:null,ui_carbsPerUnit:null,ui_bgPerUnit:null,ui_targetBg:null,ui_unitAdjustmentRatio:0,bgDistance:0,bgUnits:0,carbUnits:0,totalUnits:0,adjustedTotalUnits:0,roundedAdjustedTotalUnits:0},proportionateCarbs:{carbsPerColumnWeight:null,columnWeight:null,totalPacketWeight:null,totalPieces:null,consumedPieces:null,minimumCarbs:null,ui_carbsPerColumnWeight:null,ui_columnWeight:null,ui_totalPacketWeight:null,ui_totalPieces:null,ui_consumedPieces:null,ui_minimumCarbs:null,carbRatio:0,totalPacketCarbs:0,carbsPerPiece:0,consumedCarbs:0,roundedConsumedCarbs:0}},y=Object(m.b)({name:"settings",initialState:_.settings,reducers:{allSettingsChanged:function(e,t){Object.assign(e,t.payload),localStorage.setItem("settings",JSON.stringify(e,null,2))}}}),P=y.actions.allSettingsChanged,C=y.reducer,w=n(4),A=n(12),k=n(60),B=n(150),U=n(179),W=n(153),N=Object(m.b)({name:"view",initialState:_.view,reducers:{titleChanged:function(e,t){e.title=t.payload}}}),T=N.actions.titleChanged,I=N.reducer;function S(e,t){e=Math.round(e/t)*t;var n=String(e);if(n.includes(".")){var i=String(t),s=i.slice(i.indexOf(".")+1),a=n.slice(0,n.indexOf(".")+1+s.length);return parseFloat(a)}return e}var D=Object(m.b)({name:"insulinUnits",initialState:_.insulinUnits,reducers:{allInsulinUnitsChanged:function(e,t){!function(e,t){Object.assign(e,t);var n=e.consumedCarbs,i=e.currentBg,s=e.unitAdjustmentPercentage,a=e.targetBg,r=e.carbsPerUnit,o=e.bgPerUnit,c=1+s/100,l=i-a,u=o?l/o:0,d=r?n/r:0,b=u+d,j=b*c,p=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e<t?t:e}(S(j,e.minimumUnits));Object.assign(e,{unitAdjustmentRatio:c,bgDistance:l,bgUnits:u,carbUnits:d,totalUnits:b,adjustedTotalUnits:j,roundedAdjustedTotalUnits:p})}(e,t.payload)}}}),E=D.actions.allInsulinUnitsChanged,M=D.reducer,R=n(178);function F(e){return e=(e=String(e)).replace(/x/i,"*"),Object(R.a)(e)}function H(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};e=Object(d.a)({},e),n=Object(d.a)({},n);var i={};for(var s in n)try{n[s]=s.startsWith("ui_")?n[s]:F(n[s])}catch(b){delete n[s]}for(var a in n){var r=a.startsWith("ui_")?a.slice(3):a;n[a]===t[r]&&(n[a]=null,e[a]=null,i[a]=null)}for(var o in e){var c,l,u=o.startsWith("ui_")?o.slice(3):o;i[o]=null!==(c=null!==(l=n[o])&&void 0!==l?l:e[o])&&void 0!==c?c:t[u]}return i}function L(e,t){e=Object(d.a)({},e);var n={};for(var i in e)if(i.startsWith("ui_")){var s=i.slice(3);n[i]=t[s],n[s]=t[s]}var a={};for(var r in n)try{n[r]=r.startsWith("ui_")?n[r]:F(n[r])}catch(p){delete n[r]}for(var o in n){var c=o.startsWith("ui_")?o.slice(3):o;n[o]===t[c]&&(n[o]=null,e[o]=null,a[o]=null)}for(var l in e){var u,b,j=l.startsWith("ui_")?l.slice(3):l;a[l]=null!==(u=null!==(b=n[l])&&void 0!==b?b:e[l])&&void 0!==u?u:t[j]}return a}function J(e,t,n,i){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},a=s.noui,r=void 0!==a&&a;return function(s,a){var o=a.target.value;try{var c;n(i(H(e,t,r?Object(b.a)({},s,o||t[s]):(c={},Object(b.a)(c,s,o||t[s]),Object(b.a)(c,"ui_".concat(s),o),c))))}catch(l){}}}function z(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=i.noui,a=void 0!==s&&s;return function(i,s){var r;""===s.target.value&&t(n(a?Object(b.a)({},i,e[i]):(r={},Object(b.a)(r,i,e[i]),Object(b.a)(r,"ui_".concat(i),e[i]),r)))}}var G=n(146),Y={maxWidth:"400px",margin:"auto"},q={paddingBottom:"1em"},V={paddingTop:"1em"},X={display:"flex",paddingBottom:"2rem"},K={display:"inline-flex",fontSize:"2rem"},Q={display:"inline-flex",padding:"6px 0px",minWidth:"32px"},Z={marginTop:"0em",width:"100%"},$={input:K,inputGroup:V,addCarbs:Q,inputContainer:X,outputContainer:q,screenContainer:Y,topButton:Z},ee=(Object(G.a)($),n(151)),te=n(154),ne=n(155),ie=n(156),se=n(157),ae=n(158),re=n(1),oe=void 0,ce=function(){var e=Object(A.c)((function(e){return e.insulinUnits})),t=Object(A.c)((function(e){return e.settings})),n=H(e,t),s=Object(A.b)(),a=J(e,t,s,E),r=z(t,s,E);return Object(i.useEffect)((function(){s(T("Bolus Insulin"))})),Object(re.jsxs)("section",{className:"insulinunits",style:Y,children:[Object(re.jsx)("div",{className:"insulinunits__output",style:q,children:Object(re.jsxs)(k.a,{variant:"h2",noWrap:!0,children:[e.roundedAdjustedTotalUnits||0,"units"]})}),Object(re.jsx)("div",{className:"insulinunits__button__reset",children:Object(re.jsxs)(B.a,{style:Z,onClick:function(){s(E(L(e,t)))},children:[Object(re.jsx)(ee.a,{}),"\xa0Reset"]})}),Object(re.jsxs)("div",{className:"insulinunits_input",style:V,children:[Object(re.jsxs)("div",{className:"insulinunits__input__consumedcarbs",style:X,children:[Object(re.jsx)(U.a,{label:"Consumed carbohydrates",inputProps:{style:K},onChange:a.bind(oe,"consumedCarbs"),onBlur:r.bind(oe,"consumedCarbs"),value:n.ui_consumedCarbs,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(te.a,{})}),endAdornment:Object(re.jsxs)(W.a,{position:"end",children:[e.consumedCarbs||0,"g"]})},helperText:":: The + button goes to the carb calculator ::"}),Object(re.jsx)(B.a,{style:Q,component:j.b,to:"/proportionatecarbs",onClick:function(){},children:Object(re.jsx)(ne.a,{})})]}),Object(re.jsx)("div",{className:"insulinunits__input__currentbg",style:X,children:Object(re.jsx)(U.a,{label:"Current blood glucose",inputProps:{style:K},onChange:a.bind(oe,"currentBg"),onBlur:r.bind(oe,"currentBg"),value:n.ui_currentBg,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ie.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"mmol/l"})}})}),Object(re.jsx)("div",{className:"insulinunits__input__unitadjustmentpercentage",style:X,children:Object(re.jsx)(U.a,{label:"Insulin efficiency adjustment",inputProps:{style:K},onChange:a.bind(oe,"unitAdjustmentPercentage"),onBlur:r.bind(oe,"unitAdjustmentPercentage"),value:n.ui_unitAdjustmentPercentage,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(se.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"%"})},helperText:":: Example: +20 for stress/illness/sitting, -20 for exercise ::"})}),Object(re.jsx)("div",{className:"insulinunits__input__targetbg",style:X,children:Object(re.jsx)(U.a,{label:"Target blood glucose",inputProps:{style:K},onChange:a.bind(oe,"targetBg"),onBlur:r.bind(oe,"targetBg"),value:n.ui_targetBg,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"mmol/l"})}})}),Object(re.jsx)("div",{className:"insulinunits__input__carbsperunit",style:X,children:Object(re.jsx)(U.a,{label:"Carbs per unit",inputProps:{style:K},onChange:a.bind(oe,"carbsPerUnit"),onBlur:r.bind(oe,"carbsPerUnit"),value:n.ui_carbsPerUnit,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: How many carbs would you need exactly 1 unit to correct? Bigger amounts mean less insulin, as you can eat more carbs per unit. Smaller amounts mean more insulin as you can eat fewer carbs per unit. ::"})}),Object(re.jsx)("div",{className:"insulinunits__input__bgperunit",style:X,children:Object(re.jsx)(U.a,{label:"Blood glucose correction per unit",inputProps:{style:K},onChange:a.bind(oe,"bgPerUnit"),onBlur:r.bind(oe,"bgPerUnit"),value:n.ui_bgPerUnit,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"mmol/l"})},helperText:":: How many mmol/l would your glucose drop for 1 unit? Bigger amounts mean less insulin as 1 unit will move your blood sugar by a larger degree. Smaller amounts mean more insulin. ::"})})]})]})},le=Object(m.b)({name:"proportionateCarbs",initialState:_.proportionateCarbs,reducers:{allProportionateCarbsChanged:function(e,t){!function(e,t){Object.assign(e,t);var n=e.carbsPerColumnWeight,i=e.columnWeight,s=e.totalPacketWeight,a=e.totalPieces,r=i?n/i:0,o=r*s,c=a?o/a:0,l=c*e.consumedPieces,u=S(l,e.minimumCarbs);Object.assign(e,{carbRatio:r,totalPacketCarbs:o,carbsPerPiece:c,consumedCarbs:l,roundedConsumedCarbs:u})}(e,t.payload)}}}),ue=le.actions.allProportionateCarbsChanged,de=le.reducer,be=n(159),je=n(160),pe=n(161),me=n(162),he=n(163),ge=void 0,Oe=function(){var e=Object(A.c)((function(e){return e.insulinUnits})),t=Object(A.c)((function(e){return e.proportionateCarbs})),n=Object(A.c)((function(e){return e.settings})),s=H(t,n),a=Object(A.b)(),r=J(t,n,a,ue),o=z(n,a,ue);return Object(i.useEffect)((function(){a(T("Carbohydrates"))})),Object(re.jsxs)("section",{className:"proportionatecarbs",style:Y,children:[Object(re.jsx)("div",{className:"proportionatecarbs__output",style:q,children:Object(re.jsxs)(k.a,{variant:"h2",noWrap:!0,children:[t.roundedConsumedCarbs||0,"g"]})}),Object(re.jsx)("div",{className:"proportionatecarbs__button__addtoinsulin",children:Object(re.jsxs)(B.a,{style:Z,component:j.b,to:"/insulinunits",onClick:function(){var i=t.roundedConsumedCarbs||0;if(i){var s=parseFloat(e.ui_consumedCarbs)?"".concat(e.ui_consumedCarbs,"+").concat(i):"".concat(i);a(E(H(e,n,{consumedCarbs:s,ui_consumedCarbs:s})))}},children:[Object(re.jsx)(ne.a,{}),"\xa0Add to bolus insulin calculator"]})}),Object(re.jsx)("div",{className:"proportionatecarbs__button__reset",children:Object(re.jsxs)(B.a,{style:Z,onClick:function(){a(ue(L(t,n)))},children:[Object(re.jsx)(ee.a,{}),"\xa0Reset"]})}),Object(re.jsxs)("div",{className:"proportionatecarbs_input",style:V,children:[Object(re.jsx)("div",{className:"proportionatecarbs__input__columnweight",style:X,children:Object(re.jsx)(U.a,{label:"Per weight",inputProps:{style:K},onChange:r.bind(ge,"columnWeight"),onBlur:o.bind(ge,"columnWeight"),value:s.ui_columnWeight,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(be.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: The 'per weight' or 'column weight', normally 100g ::"})}),Object(re.jsx)("div",{className:"proportionatecarbs__input__carbspercolumnweight",style:X,children:Object(re.jsx)(U.a,{label:"Carbs per weight",inputProps:{style:K},onChange:r.bind(ge,"carbsPerColumnWeight"),onBlur:o.bind(ge,"carbsPerColumnWeight"),value:s.ui_carbsPerColumnWeight,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(je.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: Number of carbs in the 'per weight' or 'column weight' ::"})}),Object(re.jsx)("div",{className:"proportionatecarbs__input__totalpacketweight",style:X,children:Object(re.jsx)(U.a,{label:"Total (net) weight",inputProps:{style:K},onChange:r.bind(ge,"totalPacketWeight"),onBlur:o.bind(ge,"totalPacketWeight"),value:s.ui_totalPacketWeight,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(pe.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: Total weight of the packet/cake/meal ::"})}),Object(re.jsx)("div",{className:"proportionatecarbs__input__totalpieces",style:X,children:Object(re.jsx)(U.a,{label:"Total pieces",inputProps:{style:K},onChange:r.bind(ge,"totalPieces"),onBlur:o.bind(ge,"totalPieces"),value:s.ui_totalPieces,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(me.a,{})}),endAdornment:Object(re.jsxs)(W.a,{position:"end",children:[s.ui_consumedPieces,"/",s.ui_totalPieces]})},helperText:":: How many pieces will you divide the packet/cake/meal into? ::"})}),Object(re.jsx)("div",{className:"proportionatecarbs__input__consumedpieces",style:X,children:Object(re.jsx)(U.a,{label:"Consumed pieces",inputProps:{style:K},onChange:r.bind(ge,"consumedPieces"),onBlur:o.bind(ge,"consumedPieces"),value:s.ui_consumedPieces,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(he.a,{})}),endAdornment:Object(re.jsxs)(W.a,{position:"end",children:[s.ui_consumedPieces,"/",s.ui_totalPieces]})},helperText:":: How many pieces of the packet/cake/meal will you eat? ::"})})]})]})},xe=void 0,ve=function(){var e=Object(A.c)((function(e){return e.settings})),t=Object(A.b)(),n=J(e,O,t,P,{noui:!1}),s=z(O,t,P,{noui:!1});return Object(i.useEffect)((function(){t(T("Settings"))})),Object(re.jsx)("section",{className:"settings",style:Y,children:Object(re.jsxs)("div",{className:"settings_input",children:[Object(re.jsx)("div",{className:"settings__input__currentbg",style:X,children:Object(re.jsx)(U.a,{label:"Default current blood glucose",inputProps:{style:K},onChange:n.bind(xe,"currentBg"),onBlur:s.bind(xe,"currentBg"),value:e.ui_currentBg,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ie.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"mmol/l"})},helperText:":: This should match default target blood glucose ::"})}),Object(re.jsx)("div",{className:"settings__input__targetbg",style:X,children:Object(re.jsx)(U.a,{label:"Default target blood glucose",inputProps:{style:K},onChange:n.bind(xe,"targetBg"),onBlur:s.bind(xe,"targetBg"),value:e.ui_targetBg,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"mmol/l"})},helperText:":: This should match default current blood glucose ::"})}),Object(re.jsx)("div",{className:"settings__input__unitadjustmentpercentage",style:X,children:Object(re.jsx)(U.a,{label:"Default insulin efficiency adjustment",inputProps:{style:K},onChange:n.bind(xe,"unitAdjustmentPercentage"),onBlur:s.bind(xe,"unitAdjustmentPercentage"),value:e.ui_unitAdjustmentPercentage,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(se.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"%"})},helperText:":: Example: +20 for stress/illness/sitting, -20 for exercise ::"})}),Object(re.jsx)("div",{className:"settings__input__carbsperunit",style:X,children:Object(re.jsx)(U.a,{label:"Default carbs per unit",inputProps:{style:K},onChange:n.bind(xe,"carbsPerUnit"),onBlur:s.bind(xe,"carbsPerUnit"),value:e.ui_carbsPerUnit,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: How many carbs would you need exactly 1 unit to correct? Bigger amounts mean less insulin, as you can eat more carbs per unit. Smaller amounts mean more insulin as you can eat fewer carbs per unit. ::"})}),Object(re.jsx)("div",{className:"settings__input__bgperunit",style:X,children:Object(re.jsx)(U.a,{label:"Default blood glucose correction per unit",inputProps:{style:K},onChange:n.bind(xe,"bgPerUnit"),onBlur:s.bind(xe,"bgPerUnit"),value:e.ui_bgPerUnit,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"mmol/l"})},helperText:":: How many mmol/l would your glucose drop for 1 unit? Bigger amounts mean less insulin as 1 unit will move your blood sugar by a larger degree. Smaller amounts mean more insulin. ::"})}),Object(re.jsx)("div",{className:"settings__input__columnweight",style:X,children:Object(re.jsx)(U.a,{label:"Default per weight",inputProps:{style:K},onChange:n.bind(xe,"columnWeight"),onBlur:s.bind(xe,"columnWeight"),value:e.ui_columnWeight,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(be.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: The 'per weight' or 'column weight', normally 100g ::"})}),Object(re.jsx)("div",{className:"settings__input__totalpacketweight",style:X,children:Object(re.jsx)(U.a,{label:"Default total (net) weight",inputProps:{style:K},onChange:n.bind(xe,"totalPacketWeight"),onBlur:s.bind(xe,"totalPacketWeight"),value:e.ui_totalPacketWeight,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(pe.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: Total weight of the packet/cake/meal ::"})}),Object(re.jsx)("div",{className:"settings__input__totalpieces",style:X,children:Object(re.jsx)(U.a,{label:"Default total pieces",inputProps:{style:K},onChange:n.bind(xe,"totalPieces"),onBlur:s.bind(xe,"totalPieces"),value:e.ui_totalPieces,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(me.a,{})}),endAdornment:Object(re.jsxs)(W.a,{position:"end",children:[e.consumedPieces,"/",e.totalPieces]})},helperText:":: How many pieces would you divide a packet/cake/meal into? ::"})}),Object(re.jsx)("div",{className:"settings__input__consumedpieces",style:X,children:Object(re.jsx)(U.a,{label:"Default consumed pieces",inputProps:{style:K},onChange:n.bind(xe,"consumedPieces"),onBlur:s.bind(xe,"consumedPieces"),value:e.ui_consumedPieces,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(he.a,{})}),endAdornment:Object(re.jsxs)(W.a,{position:"end",children:[e.consumedPieces,"/",e.totalPieces]})},helperText:":: How many pieces of a packet/cake/meal would you normally eat? ::"})}),Object(re.jsx)("div",{className:"settings__input__minimumcarbs",style:X,children:Object(re.jsx)(U.a,{label:"Minimum carbs",inputProps:{style:K},onChange:n.bind(xe,"minimumCarbs"),onBlur:s.bind(xe,"minimumCarbs"),value:e.ui_minimumCarbs,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"g"})},helperText:":: Carbs will be rounded to this amount ::"})}),Object(re.jsx)("div",{className:"settings__input__minimumunits",style:X,children:Object(re.jsx)(U.a,{label:"Minimum units",inputProps:{style:K},onChange:n.bind(xe,"minimumUnits"),onBlur:s.bind(xe,"minimumUnits"),value:e.ui_minimumUnits,InputProps:{startAdornment:Object(re.jsx)(W.a,{position:"start",children:Object(re.jsx)(ae.a,{})}),endAdornment:Object(re.jsx)(W.a,{position:"end",children:"unit"})},helperText:":: Units will be rounded to this amount ::"})})]})})},fe=function(){var e=Object(A.b)();return Object(i.useEffect)((function(){e(T("Warning"))})),Object(re.jsxs)("section",{className:"proportionatecarbs",style:Y,children:[Object(re.jsx)(k.a,{variant:"h4",noWrap:!0,children:"WARNING:"}),Object(re.jsxs)("div",{children:["This app is to be used only as an ",Object(re.jsx)("b",{children:"indication"})," of dosage amounts.",Object(re.jsx)("p",{children:"It is imperative that the user understands how to use the app and accepts liability for its use. The author accepts no liability for loss or damage resulting from the use of this app."}),Object(re.jsxs)("p",{children:['Please make sure you understand, set and appropriately adjust your "',Object(re.jsx)("b",{children:"Default blood glucose correction per unit"}),'" and "',Object(re.jsx)("b",{children:"Default carbs per unit"}),'" amounts in the settings panel before using this app.']}),Object(re.jsxs)("p",{children:["The bolus insulin calculator ",Object(re.jsx)("b",{children:"DOES NOT"})," take into account rising and falling of your blood glucose over time. You ",Object(re.jsx)("b",{children:"MUST"})," adjust your units manually."]}),Object(re.jsxs)("p",{children:["It is advised to start with the correct ",Object(re.jsx)("b",{children:"BASAL"})," insulin first. To do this you should eat a no carb evening meal or fast on your evening meal. Adjust you basal insulin until your blood glucose is flat over night. Make sure to do this when you are not ill, stressed or doing abnormal amounts of exercise, you need a baseline basal that you can adjust later."]}),Object(re.jsx)("p",{children:"Once your basal insulin dose is correct, you can change you default carbohydrates per unit and default blood glucose correction per unit to best suit meal times and corrections. A bigger carbs per unit and blood glucose per unit value will mean less insulin, a smaller value will mean more insulin."})]})]})},_e=function(){var e=Object(A.b)(),t=Object(A.c)((function(e){return e.settings}));return Object(i.useEffect)((function(){e(T("About"))})),Object(re.jsx)("section",{className:"proportionatecarbs",style:Y,children:Object(re.jsxs)("div",{children:[Object(re.jsx)("p",{children:"This is a product demo for an upcoming app. Please do not share the link unless given express permission from the author."}),Object(re.jsxs)("p",{children:["Author: ",Object(re.jsx)("a",{href:"https://oliverfoster.co.uk/about",target:"_blank",children:"Oliver Foster"}),Object(re.jsx)("br",{}),"Version: ",t.version,Object(re.jsx)("br",{}),"Update available: ",Boolean(t.needsUpdating)?"Yes":"No"]}),Object(re.jsxs)("p",{children:["Leave feedback or requests using the form at ",Object(re.jsx)("a",{href:"https://oliverfoster.co.uk/contact",target:"_blank",children:"oliverfoster.co.uk/contact"}),". Make sure to say that your message is regarding the ",Object(re.jsx)("b",{children:"diabetes calculator"}),"."]}),Object(re.jsxs)("p",{children:["Copyright \xa9 2021, Oliver Foster",Object(re.jsx)("br",{})]})]})})},ye=n(164),Pe=n(165),Ce=n(166),we=n(181),Ae=n(170),ke=n(152),Be=n(171),Ue=n(172),We=n(174),Ne=n(167),Te=n(168),Ie=n(169),Se=n(173),De=n(175),Ee=n(176),Me=n(177),Re=n(26),Fe=220,He=Object(G.a)((function(e){return{root:{display:"flex"},appBar:{zIndex:e.zIndex.drawer+1,transition:e.transitions.create(["width","margin"],{easing:e.transitions.easing.sharp,duration:e.transitions.duration.leavingScreen})},appBarShift:{marginLeft:Fe,width:"calc(100% - ".concat(Fe,"px)"),transition:e.transitions.create(["width","margin"],{easing:e.transitions.easing.sharp,duration:e.transitions.duration.enteringScreen})},menuButton:{marginLeft:-20,marginRight:20},hide:{display:"none"},drawer:{width:Fe,flexShrink:0,whiteSpace:"nowrap"},drawerOpen:{width:Fe,transition:e.transitions.create("width",{easing:e.transitions.easing.sharp,duration:e.transitions.duration.enteringScreen})},drawerClose:Object(b.a)({transition:e.transitions.create("width",{easing:e.transitions.easing.sharp,duration:e.transitions.duration.leavingScreen}),overflowX:"hidden",width:e.spacing(0)+1},e.breakpoints.up("sm"),{width:e.spacing(7)+1}),toolbar:Object(d.a)({display:"flex",alignItems:"center",justifyContent:"flex-end",padding:e.spacing(0,1)},e.mixins.toolbar),content:{flexGrow:1,padding:e.spacing(3)}}}));var Le=function(){var e,t,n=Object(A.b)(),a=Object(A.c)((function(e){return e.view})),r=Object(A.c)((function(e){return e.settings})),o=He(),d=Object(Re.a)(),m=s.a.useState(!1),h=Object(u.a)(m,2),g=h[0],O=h[1],x=function(){O(!1)};return console.log(r.needsUpdating),Object(i.useEffect)((function(){Object(l.a)(c.a.mark((function e(){var t,i;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch("./manifest.json");case 2:return t=e.sent,e.next=5,t.json();case 5:i=e.sent,console.log("Installed: ".concat(r.version,", Manifest: ").concat(i.version)),n(P({needsUpdating:i.version!==r.version}));case 8:case"end":return e.stop()}}),e)})))()})),Object(re.jsx)(j.a,{children:Object(re.jsxs)("div",{className:"App",children:[Object(re.jsx)(ye.a,{position:"fixed",className:Object(w.a)(o.appBar,Object(b.a)({},o.appBarShift,g)),children:Object(re.jsxs)(Pe.a,{children:[Object(re.jsx)(Ce.a,{color:"inherit","aria-label":"open drawer",onClick:function(){O(!0)},edge:"start",className:Object(w.a)(o.menuButton,Object(b.a)({},o.hide,g)),children:Object(re.jsx)(Ne.a,{})}),Object(re.jsx)(k.a,{variant:"h6",noWrap:!0,children:a.title})]})}),Object(re.jsxs)(we.a,{variant:"permanent",className:Object(w.a)(o.drawer,(e={},Object(b.a)(e,o.drawerOpen,g),Object(b.a)(e,o.drawerClose,!g),e)),classes:{paper:Object(w.a)((t={},Object(b.a)(t,o.drawerOpen,g),Object(b.a)(t,o.drawerClose,!g),t))},children:[Object(re.jsx)("div",{className:o.toolbar,children:Object(re.jsx)(Ce.a,{onClick:x,children:"rtl"===d.direction?Object(re.jsx)(Te.a,{}):Object(re.jsx)(Ie.a,{})})}),Object(re.jsx)(Ae.a,{}),Object(re.jsxs)(ke.a,{children:[Object(re.jsxs)(Be.a,{button:!0,component:j.b,to:"/insulinunits",onClick:x,children:[Object(re.jsx)(Ue.a,{children:Object(re.jsx)(Se.a,{})}),Object(re.jsx)(We.a,{primary:"Bolus Insulin"})]},"Insulin"),Object(re.jsxs)(Be.a,{button:!0,component:j.b,to:"/proportionatecarbs",onClick:x,children:[Object(re.jsx)(Ue.a,{children:Object(re.jsx)(te.a,{})}),Object(re.jsx)(We.a,{primary:"Carbohydrates"})]},"Carbs")]}),Object(re.jsx)(Ae.a,{}),Object(re.jsxs)(ke.a,{children:[Object(re.jsxs)(Be.a,{button:!0,component:j.b,to:"/settings",onClick:x,children:[Object(re.jsx)(Ue.a,{children:Object(re.jsx)(ae.a,{})}),Object(re.jsx)(We.a,{primary:"Settings"})]},"Settings"),Object(re.jsxs)(Be.a,{button:!0,component:j.b,to:"/warning",onClick:x,children:[Object(re.jsx)(Ue.a,{children:Object(re.jsx)(De.a,{})}),Object(re.jsx)(We.a,{primary:"Warning"})]},"Warning"),Object(re.jsxs)(Be.a,{button:!0,disabled:!r.needsUpdating,onClick:function(){window.serviceWorkerRegistration.active.postMessage("update")},children:[Object(re.jsx)(Ue.a,{children:Object(re.jsx)(Ee.a,{})}),Object(re.jsx)(We.a,{primary:"Update"})]},"Update"),Object(re.jsxs)(Be.a,{button:!0,component:j.b,to:"/about",onClick:x,children:[Object(re.jsx)(Ue.a,{children:Object(re.jsx)(Me.a,{})}),Object(re.jsx)(We.a,{primary:"About"})]},"About")]})]}),Object(re.jsxs)("main",{className:o.content,children:[Object(re.jsx)("div",{className:o.toolbar}),Object(re.jsxs)(p.d,{children:[Object(re.jsx)(p.b,{path:"/insulinunits",children:Object(re.jsx)(ce,{})}),Object(re.jsx)(p.b,{path:"/proportionatecarbs",children:Object(re.jsx)(Oe,{})}),Object(re.jsx)(p.b,{path:"/settings",children:Object(re.jsx)(ve,{})}),Object(re.jsx)(p.b,{path:"/warning",children:Object(re.jsx)(fe,{})}),Object(re.jsx)(p.b,{path:"/about",children:Object(re.jsx)(_e,{})}),Object(re.jsx)(p.a,{to:"/insulinunits"})]})]})]})})},Je=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,183)).then((function(t){var n=t.getCLS,i=t.getFID,s=t.getFCP,a=t.getLCP,r=t.getTTFB;n(e),i(e),s(e),a(e),r(e)}))},ze=Object(m.a)({reducer:{view:I,settings:C,insulinUnits:M,proportionateCarbs:de}});"serviceWorker"in navigator&&window.addEventListener("load",Object(l.a)(c.a.mark((function e(){var t;return c.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,navigator.serviceWorker.register("./serviceWorker.js");case 3:t=e.sent,console.log("Service worker registered! \ud83d\ude0e",t),e.next=11;break;case 7:return e.prev=7,e.t0=e.catch(0),console.log("\ud83d\ude25 Service worker registration failed: ",e.t0),e.abrupt("return");case 11:navigator.serviceWorker.addEventListener("message",(function(e){switch(console.log("The service worker sent me a message: ".concat(e.data)),e.data){case"refresh":return void window.location.reload();default:return}})),navigator.serviceWorker.ready.then((function(e){window.serviceWorkerRegistration=e,e.active.postMessage("hi")}));case 13:case"end":return e.stop()}}),e,null,[[0,7]])})))),r.a.render(Object(re.jsx)(s.a.StrictMode,{children:Object(re.jsx)(A.a,{store:ze,children:Object(re.jsx)(Le,{})})}),document.getElementById("root")),Je()},98:function(e,t,n){}},[[115,1,2]]]);
//# sourceMappingURL=main.5a18b9cd.chunk.js.map