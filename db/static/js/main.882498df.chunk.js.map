{"version":3,"sources":["store/initialState.js","store/view.js","store/insulinUnits.js","utils/doStringMath.js","utils/makeNewState.js","utils/makeStateSetters.js","utils/makeOnChanged.js","utils/makeOnBlur.js","utils/styles.js","InsulinUnits.js","store/proportionateCarbs.js","ProportionateCarbs.js","Settings.js","App.js","reportWebVitals.js","store/settings.js","store/store.js","index.js"],"names":["initialState","view","title","settings","consumedCarbs","currentBg","minimumUnit","carbsPerUnit","bgPerUnit","targetBg","unitAdjustmentPercentage","carbsPerColumnWeight","columnWeight","totalPacketWeight","totalPieces","consumedPieces","minimumCarbs","insulinUnits","unitAdjustmentRatio","bgDistance","bgUnits","carbUnits","totalUnits","adjustedTotalUnits","roundedAdjustedTotalUnits","proportionateCarbs","carbRatio","totalPacketCarbs","carbsPerPiece","roundedConsumedCarbs","viewSlice","createSlice","name","reducers","titleChanged","state","action","payload","actions","insulinUnitsSlice","allInsulinUnitsChanged","stateUpdate","Object","assign","Math","round","doUnitMath","doStringMath","str","String","replace","evaluate","makeNewState","update","merged","key","makeStateSetters","defaults","values","setters","useState","makeOnChanged","dispatch","event","value","target","err","makeOnBlur","input","fontSize","inputContainer","paddingBottom","outputContainer","rawStyles","makeStyles","InsulinUnits","useSelector","useDispatch","onChanged","onBlur","useEffect","className","style","OutputContainer","Typography","variant","noWrap","InputContainer","TextField","label","inputProps","InputStyle","onChange","bind","InputProps","startAdornment","InputAdornment","position","Restaurant","endAdornment","ShowChart","FitnessCenter","proportionateCarbsSlice","allProportionateCarbsChanged","ProportionateCarbs","Maximize","MenuOpen","Cake","RadioButtonUnchecked","DataUsage","Settings","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","App","classes","useTheme","React","open","setOpen","handleDrawerClose","AppBar","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Menu","Drawer","paper","direction","ChevronRight","ChevronLeft","Divider","List","ListItem","button","component","Link","to","ListItemIcon","LocalHospitalOutlined","ListItemText","primary","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","settingsSlice","configureStore","reducer","viewReducer","settingsReducer","insulinUnitsReducer","proportionateCarbsReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"mRAAaA,EAAe,CAC1BC,KAAM,CACJC,MAAO,IAETC,SAAU,CACRC,cAAe,EACfC,UAAW,EACXC,YAAa,GACbC,aAAc,EACdC,UAAW,IACXC,SAAU,EACVC,yBAA0B,EAC1BC,qBAAsB,EACtBC,aAAc,IACdC,kBAAmB,IACnBC,YAAa,EACbC,eAAgB,EAChBC,aAAc,GAEhBC,aAAc,CACZb,cAAe,KACfC,UAAW,KACXK,yBAA0B,KAC1BJ,YAAa,KACbC,aAAc,KACdC,UAAW,KACXC,SAAU,KACVS,oBAAqB,EACrBC,WAAY,EACZC,QAAS,EACTC,UAAW,EACXC,WAAY,EACZC,mBAAoB,EACpBC,0BAA2B,GAE7BC,mBAAoB,CAClBd,qBAAsB,KACtBC,aAAc,KACdC,kBAAmB,KACnBC,YAAa,KACbC,eAAgB,KAChBC,aAAc,KACdU,UAAW,EACXC,iBAAkB,EAClBC,cAAe,EACfxB,cAAe,EACfyB,qBAAsB,IC3CpBC,EAAYC,YAAY,CAC5BC,KAAM,OACNhC,aAAcA,EAAaC,KAC3BgC,SAAU,CACRC,aADQ,SACKC,EAAOC,GAClBD,EAAMjC,MAAQkC,EAAOC,YAMzBH,EACEJ,EAAUQ,QADZJ,aAGaJ,IAAf,QCwBMS,EAAoBR,YAAY,CACpCC,KAAM,eACNhC,aAAcA,EAAaiB,aAC3BgB,SAAU,CACRO,uBADQ,SACeL,EAAOC,IA1Cf,SAACD,EAAOM,GACzBC,OAAOC,OAAOR,EAAOM,GAErB,IAAMrC,EAAgB+B,EAAM/B,cACtBC,EAAY8B,EAAM9B,UAClBK,EAA2ByB,EAAMzB,yBACjCD,EAAW0B,EAAM1B,SACjBF,EAAe4B,EAAM5B,aACrBC,EAAY2B,EAAM3B,UAClBF,EAAc6B,EAAM7B,YAEpBY,EAAsB,EAAKR,EAA2B,IACtDS,EAAcd,EAAYI,EAC1BW,EAAUZ,EAAaW,EAAaX,EAAa,EACjDa,EAAYd,EAAgBH,EAAgBG,EAAgB,EAE5De,EAAcF,EAAUC,EACxBE,EAAsBD,EAAaJ,EACnCM,EAA4BoB,KAAKC,MAAMtB,EAAqBjB,GAAeA,EAEjFoC,OAAOC,OAAOR,EAAO,CACnB/B,gBACAC,YACAK,2BACAD,WACAF,eACAC,YACAU,sBACAC,aACAC,UACAC,YACAC,aACAC,qBACAC,8BAUEsB,CAAWX,EAAOC,EAAOC,aAM7BG,EACED,EAAkBD,QADpBE,uBAGaD,IAAf,Q,SCrDe,SAASQ,EAAaC,GAGnC,OADAA,GADAA,EAAMC,OAAOD,IACHE,QAAQ,KAAM,KACjBC,YAASH,GCHH,SAASI,EAAajB,EAAOhC,GAAwB,IAAdkD,EAAa,uDAAJ,GACvDC,EAAS,GACf,IAAK,IAAMC,KAAOF,EAChBA,EAAOE,GAAOR,EAAaM,EAAOE,IAEpC,IAAK,IAAMA,KAAOpB,EAAO,CAAC,IAAD,IACvBmB,EAAOC,GAAP,oBAAcF,EAAOE,UAArB,QAA6BpB,EAAMoB,UAAnC,QAA2CpD,EAASoD,GAEtD,OAAOD,ECRM,SAASE,EAAiBC,GACvC,IAAMC,EAAS,GACTC,EAAU,GAChB,IAAK,IAAMJ,KAAOE,EAAU,OAEMG,mBAASH,EAASF,IAFxB,mBAExBG,EAAOH,GAFiB,KAEXI,EAAQJ,GAFG,KAI5B,MAAO,CAACG,EAAQC,GCPH,SAASE,EAAc1B,EAAOhC,EAAUwD,EAASG,EAAU1B,GACxE,OAAO,SAACJ,EAAM+B,GACZ,IAAMC,EAAQD,EAAME,OAAOD,MAC3BL,EAAQ3B,GAAMgC,GACd,IACEF,EACE1B,EAAOgB,EACLjB,EACAhC,EAFiB,eAId6B,EAAOgC,GAAS7D,EAAS6B,OAIhC,MAAOkC,MChBE,SAASC,EAAWR,EAASF,GAC1C,OAAO,SAACzB,EAAM+B,GAEE,KADAA,EAAME,OAAOD,OAE3BL,EAAQ3B,GAAMyB,EAASzB,K,aCFrBoC,EAAQ,CACZC,SAAU,QAGNC,EAAiB,CACrBC,cAAe,QAGXC,EAAkB,CACtBD,cAAe,QAGXE,EAAY,CAChBL,QACAE,iBACAE,mB,GAGaE,YAAWD,G,mDCHbE,EAAe,WAC1B,IAAMxC,EAAQyC,aAAY,SAAAzC,GAAK,OAAIA,EAAMlB,gBACnCd,EAAWyE,aAAY,SAAAzC,GAAK,OAAIA,EAAMhC,YACtCsD,EAAWL,EAAajB,EAAOhC,GACrC,EAA0BqD,EAAiBC,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACMG,EAAWe,cACXC,EAAYjB,EAAc1B,EAAOhC,EAAUwD,EAASG,EAAUtB,GAC9DuC,EAASZ,EAAWR,EAASF,GAQnC,OANAuB,qBAAU,WACRlB,EACE5B,EAAa,eAKf,0BAAS+C,UAAU,eAAnB,UAEE,qBAAKA,UAAU,uBAAuBC,MAAOC,EAA7C,SACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,UACGnD,EAAMX,2BAA2B,EADpC,aAKF,sBAAKyD,UAAU,qBAAf,UAEE,qBAAKA,UAAU,qCAAqCC,MAAOK,EAA3D,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,yBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,iBAC/Bd,OAAQA,EAAOc,KAAK,EAAM,iBAC1B7B,MAAON,EAAOtD,cACd0F,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACC,EAAA,EAAD,MACjDC,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAKpB,qBAAKhB,UAAU,iCAAiCC,MAAOK,EAAvD,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,wBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,aAC/Bd,OAAQA,EAAOc,KAAK,EAAM,aAC1B7B,MAAON,EAAOrD,UACdyF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACG,EAAA,EAAD,MACjDD,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,yBAKpB,qBAAKhB,UAAU,gDAAgDC,MAAOK,EAAtE,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,aACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,4BAC/Bd,OAAQA,EAAOc,KAAK,EAAM,4BAC1B7B,MAAON,EAAOhD,yBACdoF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACI,EAAA,EAAD,MACjDF,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAKpB,qBAAKhB,UAAU,oCAAoCC,MAAOK,EAA1D,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,iBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,gBAC/Bd,OAAQA,EAAOc,KAAK,EAAM,gBAC1B7B,MAAON,EAAOnD,aACduF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAAC,IAAD,MACjDE,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAKpB,qBAAKhB,UAAU,iCAAiCC,MAAOK,EAAvD,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,yBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,aAC/Bd,OAAQA,EAAOc,KAAK,EAAM,aAC1B7B,MAAON,EAAOlD,UACdsF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAAC,IAAD,MACjDE,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,yBAKpB,qBAAKhB,UAAU,gCAAgCC,MAAOK,EAAtD,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,uBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,YAC/Bd,OAAQA,EAAOc,KAAK,EAAM,YAC1B7B,MAAON,EAAOjD,SACdqF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAAC,IAAD,MACjDE,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,gCChFtBK,EAA0BvE,YAAY,CAC1CC,KAAM,qBACNhC,aAAcA,EAAayB,mBAC3BQ,SAAU,CACRsE,6BADQ,SACqBpE,EAAOC,IArCrB,SAACD,EAAOM,GACzBC,OAAOC,OAAOR,EAAOM,GAErB,IAAM9B,EAAuBwB,EAAMxB,qBAC7BC,EAAeuB,EAAMvB,aACrBC,EAAoBsB,EAAMtB,kBAC1BC,EAAcqB,EAAMrB,YACpBC,EAAiBoB,EAAMpB,eACvBC,EAAemB,EAAMnB,aAErBU,EAAYd,EAAgBD,EAAuBC,EAAgB,EACnEe,EAAmBD,EAAYb,EAC/Be,EAAgBd,EAAea,EAAmBb,EAAe,EACjEV,EAAiBwB,EAAgBb,EAEjCc,EAAuBe,KAAKC,MAAMzC,EAAgBY,GAAgBA,EAExE0B,OAAOC,OAAOR,EAAO,CACnBxB,uBACAC,eACAC,oBACAC,cACAC,iBACAC,eACAU,YACAC,mBACAC,gBACAxB,gBACAyB,yBAUEiB,CAAWX,EAAOC,EAAOC,aAM7BkE,EACED,EAAwBhE,QAD1BiE,6BAGaD,IAAf,Q,sDC1BaE,EAAqB,WAChC,IAAMrE,EAAQyC,aAAY,SAAAzC,GAAK,OAAIA,EAAMV,sBACnCtB,EAAWyE,aAAY,SAAAzC,GAAK,OAAIA,EAAMhC,YACtCsD,EAAWL,EAAajB,EAAOhC,GACrC,EAA0BqD,EAAiBC,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KACMG,EAAWe,cACXC,EAAYjB,EAAc1B,EAAOhC,EAAUwD,EAASG,EAAUyC,GAC9DxB,EAASZ,EAAWR,EAASF,GAQnC,OANAuB,qBAAU,WACRlB,EACE5B,EAAa,qBAKf,0BAAS+C,UAAU,qBAAnB,UAEE,qBAAKA,UAAU,6BAA6BC,MAAOC,EAAnD,SACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,UACGnD,EAAMN,sBAAsB,EAD/B,SAKF,sBAAKoD,UAAU,2BAAf,UAEE,qBAAKA,UAAU,0CAA0CC,MAAOK,EAAhE,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,aACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,gBAC/Bd,OAAQA,EAAOc,KAAK,EAAM,gBAC1B7B,MAAON,EAAO9C,aACdkF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACQ,EAAA,EAAD,MACjDN,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAKpB,qBAAKhB,UAAU,kDAAkDC,MAAOK,EAAxE,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,mBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,wBAC/Bd,OAAQA,EAAOc,KAAK,EAAM,wBAC1B7B,MAAON,EAAO/C,qBACdmF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACS,EAAA,EAAD,MACjDP,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAKpB,qBAAKhB,UAAU,+CAA+CC,MAAOK,EAArE,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,eACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,qBAC/Bd,OAAQA,EAAOc,KAAK,EAAM,qBAC1B7B,MAAON,EAAO7C,kBACdiF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACU,EAAA,EAAD,MACjDR,aAAc,cAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,oBAKpB,qBAAKhB,UAAU,yCAAyCC,MAAOK,EAA/D,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,SACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,eAC/Bd,OAAQA,EAAOc,KAAK,EAAM,eAC1B7B,MAAON,EAAO5C,YACdgF,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACW,EAAA,EAAD,MACjDT,aAAc,eAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UAAgCvC,EAAO3C,eAAvC,IAAwD2C,EAAO5C,oBAKnF,qBAAKmE,UAAU,4CAA4CC,MAAOK,EAAlE,SACE,cAACC,EAAA,EAAD,CAAWC,MAAM,kBACfC,WAAY,CAACR,MAAOS,GACpBC,SAAUd,EAAUe,KAAK,EAAM,kBAC/Bd,OAAQA,EAAOc,KAAK,EAAM,kBAC1B7B,MAAON,EAAO3C,eACd+E,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SAAiC,cAACY,EAAA,EAAD,MACjDV,aAAc,eAACH,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UAAgCvC,EAAO3C,eAAvC,IAAwD2C,EAAO5C,2BC1G9EgG,EAAW,WACtB,IAAMhD,EAAWe,cASjB,OAPAG,qBAAU,WACRlB,EACE5B,EAAa,gBAKV,sD,2ICUH6E,GAAc,IAEdC,GAAYtC,aAAW,SAACuC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BC,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAAYhB,GACZiB,MAAM,eAAD,OAAiBjB,GAAjB,OACLQ,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASK,kBAGzCC,WAAY,CACVH,YAAa,GACbI,YAAa,IAEfC,KAAM,CACJjB,QAAS,QAEXG,OAAQ,CACNU,MAAOjB,GACPsB,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVP,MAAOjB,GACPQ,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASK,kBAGzCO,YAAY,aACVjB,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,gBAEvCY,UAAW,SACXT,MAAOf,EAAMyB,QAAQ,GAAK,GACzBzB,EAAM0B,YAAYC,GAAG,MAAQ,CAC5BZ,MAAOf,EAAMyB,QAAQ,GAAK,IAG9BG,QAAQ,aACN1B,QAAS,OACT2B,WAAY,SACZC,eAAgB,WAChBC,QAAS/B,EAAMyB,QAAQ,EAAG,IAEvBzB,EAAMgC,OAAOJ,SAElBK,QAAS,CACPC,SAAU,EACVH,QAAS/B,EAAMyB,QAAQ,QAqGZU,OAjGf,WAAgB,IAAD,IACPnJ,EAAO2E,aAAY,SAAAzC,GAAK,OAAIA,EAAMlC,QAClCoJ,EAAUrC,KACVC,EAAQqC,eACd,EAAwBC,IAAM3F,UAAS,GAAvC,mBAAO4F,EAAP,KAAaC,EAAb,KAMMC,EAAoB,WACxBD,GAAQ,IAGV,OACE,cAAC,IAAD,UACE,sBAAKxE,UAAU,MAAf,UACE,cAAC0E,GAAA,EAAD,CACE1D,SAAS,QACThB,UAAW2E,YAAKP,EAAQjC,OAAT,eACZiC,EAAQvB,YAAc0B,IAH3B,SAME,eAACK,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QArBa,WACvBR,GAAQ,IAqBES,KAAK,QACLjF,UAAW2E,YAAKP,EAAQnB,WAAT,eACZmB,EAAQjB,KAAOoB,IANpB,SASE,cAACW,GAAA,EAAD,MAEF,cAAC/E,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,SACGrF,EAAKC,aAIZ,eAACkK,GAAA,EAAD,CACE/E,QAAQ,YACRJ,UAAW2E,YAAKP,EAAQ/B,QAAT,mBACZ+B,EAAQd,WAAaiB,GADT,cAEZH,EAAQb,aAAegB,GAFX,IAIfH,QAAS,CACPgB,MAAOT,aAAI,mBACRP,EAAQd,WAAaiB,GADb,cAERH,EAAQb,aAAegB,GAFf,KAPf,UAaE,qBAAKvE,UAAWoE,EAAQR,QAAxB,SACE,cAACiB,GAAA,EAAD,CAAYG,QAASP,EAArB,SACuB,QAApBzC,EAAMqD,UAAsB,cAACC,GAAA,EAAD,IAAuB,cAACC,GAAA,EAAD,QAGxD,cAACC,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAUC,QAAM,EAAgBC,UAAWC,IAAMC,GAAG,gBAAgBd,QAASP,EAA7E,UACE,cAACsB,GAAA,EAAD,UAAc,cAACC,GAAA,EAAD,MACd,cAACC,GAAA,EAAD,CAAcC,QAAS,cAFJ,WAIrB,eAACR,GAAA,EAAD,CAAUC,QAAM,EAAaC,UAAWC,IAAMC,GAAG,sBAAsBd,QAASP,EAAhF,UACE,cAACsB,GAAA,EAAD,UAAc,cAAC9E,EAAA,EAAD,MACd,cAACgF,GAAA,EAAD,CAAcC,QAAS,YAFJ,YAKvB,cAACV,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAUC,QAAM,EAAgBC,UAAWC,IAAMC,GAAG,YAAYd,QAASP,EAAzE,UACI,cAACsB,GAAA,EAAD,UAAc,cAAC,IAAD,MACd,cAACE,GAAA,EAAD,CAAcC,QAAS,eAFN,iBAMzB,uBAAMlG,UAAWoE,EAAQH,QAAzB,UACE,qBAAKjE,UAAWoE,EAAQR,UACxB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuC,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,sBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUL,GAAG,8BCtKVM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCECQ,GANO/J,YAAY,CAChCC,KAAM,WACNhC,aAAcA,EAAaG,SAC3B8B,SAAU,KAGZ,QCFe8J,eAAe,CAC5BC,QAAS,CACP/L,KAAMgM,EACN9L,SAAU+L,GACVjL,aAAckL,EACd1K,mBAAoB2K,KCJxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.882498df.chunk.js","sourcesContent":["export const initialState = {\n  view: {\n    title: ''\n  },\n  settings: {\n    consumedCarbs: 0,\n    currentBg: 5,\n    minimumUnit: 0.5,\n    carbsPerUnit: 9,\n    bgPerUnit: 2.9,\n    targetBg: 5,\n    unitAdjustmentPercentage: 0,\n    carbsPerColumnWeight: 0,\n    columnWeight: 100,\n    totalPacketWeight: 100,\n    totalPieces: 8,\n    consumedPieces: 8,\n    minimumCarbs: 1\n  },\n  insulinUnits: {\n    consumedCarbs: null,\n    currentBg: null,\n    unitAdjustmentPercentage: null,\n    minimumUnit: null,\n    carbsPerUnit: null,\n    bgPerUnit: null,\n    targetBg: null,\n    unitAdjustmentRatio: 0,\n    bgDistance: 0,\n    bgUnits: 0,\n    carbUnits: 0,\n    totalUnits: 0,\n    adjustedTotalUnits: 0,\n    roundedAdjustedTotalUnits: 0\n  },\n  proportionateCarbs: {\n    carbsPerColumnWeight: null,\n    columnWeight: null,\n    totalPacketWeight: null,\n    totalPieces: null,\n    consumedPieces: null,\n    minimumCarbs: null,\n    carbRatio: 0,\n    totalPacketCarbs: 0,\n    carbsPerPiece: 0,\n    consumedCarbs: 0,\n    roundedConsumedCarbs: 0\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { initialState } from './initialState'\n\nconst viewSlice = createSlice({\n  name: 'view',\n  initialState: initialState.view,\n  reducers: {\n    titleChanged(state, action) {\n      state.title = action.payload\n    }\n  }\n})\n\nexport const {\n  titleChanged\n} = viewSlice.actions\n\nexport default viewSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { initialState } from './initialState'\n\nconst doUnitMath = (state, stateUpdate) => {\n  Object.assign(state, stateUpdate)\n\n  const consumedCarbs = state.consumedCarbs\n  const currentBg = state.currentBg\n  const unitAdjustmentPercentage = state.unitAdjustmentPercentage\n  const targetBg = state.targetBg\n  const carbsPerUnit = state.carbsPerUnit\n  const bgPerUnit = state.bgPerUnit\n  const minimumUnit = state.minimumUnit\n\n  const unitAdjustmentRatio = 1 + (unitAdjustmentPercentage / 100)\n  const bgDistance = (currentBg - targetBg)\n  const bgUnits = bgPerUnit ? (bgDistance / bgPerUnit) : 0\n  const carbUnits = carbsPerUnit ? (consumedCarbs / carbsPerUnit) : 0\n\n  const totalUnits = (bgUnits + carbUnits)\n  const adjustedTotalUnits = (totalUnits * unitAdjustmentRatio)\n  const roundedAdjustedTotalUnits = Math.round(adjustedTotalUnits / minimumUnit) * minimumUnit\n\n  Object.assign(state, {\n    consumedCarbs,\n    currentBg,\n    unitAdjustmentPercentage,\n    targetBg,\n    carbsPerUnit,\n    bgPerUnit,\n    unitAdjustmentRatio,\n    bgDistance,\n    bgUnits,\n    carbUnits,\n    totalUnits,\n    adjustedTotalUnits,\n    roundedAdjustedTotalUnits\n  })\n\n}\n\nconst insulinUnitsSlice = createSlice({\n  name: 'insulinUnits',\n  initialState: initialState.insulinUnits,\n  reducers: {\n    allInsulinUnitsChanged(state, action) {\n      doUnitMath(state, action.payload)\n    }\n  }\n})\n\nexport const {\n  allInsulinUnitsChanged\n} = insulinUnitsSlice.actions\n\nexport default insulinUnitsSlice.reducer\n","import { evaluate } from 'mathjs'\n\nexport default function doStringMath(str) {\n  str = String(str)\n  str = str.replace(/x/i, '*')\n  return evaluate(str)\n}\n","import doStringMath from './doStringMath';\n\nexport default function makeNewState(state, settings, update = {}) {\n  const merged = {}\n  for (const key in update) {\n    update[key] = doStringMath(update[key])\n  }\n  for (const key in state) {\n    merged[key] = update[key] ?? state[key] ?? settings[key]\n  }\n  return merged\n}\n","import { useState } from \"react\"\n\nexport default function makeStateSetters(defaults) {\n  const values = {}\n  const setters = {}\n  for (const key in defaults) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    [ values[key], setters[key] ] = useState(defaults[key])\n  }\n  return [values, setters]\n}\n","import makeNewState from \"./makeNewState\"\n\nexport default function makeOnChanged(state, settings, setters, dispatch, action) {\n  return (name, event) => {\n    const value = event.target.value\n    setters[name](value)\n    try {\n      dispatch(\n        action(makeNewState(\n          state,\n          settings,\n          {\n            [name]: value || settings[name]\n          }\n        ))\n      )\n    } catch (err) {}\n  }\n}\n","export default function makeOnBlur(setters, defaults) {\n  return (name, event) => {\n    const value = event.target.value\n    if (value !== \"\") return;\n    setters[name](defaults[name])\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst input = {\n  fontSize: '2rem'\n}\n\nconst inputContainer = {\n  paddingBottom: '2rem'\n}\n\nconst outputContainer = {\n  paddingBottom: '2rem'\n}\n\nconst rawStyles = {\n  input,\n  inputContainer,\n  outputContainer\n};\n\nconst styles = makeStyles(rawStyles);\n\nexport default styles\n\nexport {\n  input,\n  inputContainer,\n  outputContainer\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TextField, Typography, InputAdornment } from '@material-ui/core';\nimport { titleChanged } from './store/view';\nimport { allInsulinUnitsChanged } from './store/insulinUnits'\nimport makeNewState from './utils/makeNewState'\nimport makeStateSetters from './utils/makeStateSetters'\nimport makeOnChanged from './utils/makeOnChanged';\nimport makeOnBlur from './utils/makeOnBlur'\nimport { input as InputStyle, inputContainer as InputContainer, outputContainer as OutputContainer } from './utils/styles';\nimport {\n  Restaurant as RestaurantIcon,\n  ShowChart as ShowChartIcon,\n  FitnessCenter as FitnessCenterIcon,\n  Settings as SettingsIcon\n} from '@material-ui/icons'\n\nexport const InsulinUnits = () => {\n  const state = useSelector(state => state.insulinUnits)\n  const settings = useSelector(state => state.settings)\n  const defaults = makeNewState(state, settings);\n  const [values, setters] = makeStateSetters(defaults)\n  const dispatch = useDispatch()\n  const onChanged = makeOnChanged(state, settings, setters, dispatch, allInsulinUnitsChanged)\n  const onBlur = makeOnBlur(setters, defaults)\n\n  useEffect(() => {\n    dispatch(\n      titleChanged('Insulin')\n    )\n  })\n\n  return (\n    <section className=\"insulinunits\">\n\n      <div className=\"insulinunits__output\" style={OutputContainer}>\n        <Typography variant=\"h2\" noWrap>\n          {state.roundedAdjustedTotalUnits||0}units\n        </Typography>\n      </div>\n\n      <div className=\"insulinunits_input\">\n\n        <div className=\"insulinunits__input__consumedcarbs\" style={InputContainer}>\n          <TextField label=\"Consumed carbohydrates\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'consumedCarbs')}\n            onBlur={onBlur.bind(this, 'consumedCarbs')}\n            value={values.consumedCarbs}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><RestaurantIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">g</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"insulinunits__input__currentbg\" style={InputContainer}>\n          <TextField label=\"Current blood glucose\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'currentBg')}\n            onBlur={onBlur.bind(this, 'currentBg')}\n            value={values.currentBg}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><ShowChartIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">mmol/l</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"insulinunits__input__unitadjustmentpercentage\" style={InputContainer}>\n          <TextField label=\"Adjustment\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'unitAdjustmentPercentage')}\n            onBlur={onBlur.bind(this, 'unitAdjustmentPercentage')}\n            value={values.unitAdjustmentPercentage}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><FitnessCenterIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"insulinunits__input__carbsperunit\" style={InputContainer}>\n          <TextField label=\"Carbs per unit\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'carbsPerUnit')}\n            onBlur={onBlur.bind(this, 'carbsPerUnit')}\n            value={values.carbsPerUnit}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><SettingsIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">g</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"insulinunits__input__bgperunit\" style={InputContainer}>\n          <TextField label=\"Blood glucose per unit\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'bgPerUnit')}\n            onBlur={onBlur.bind(this, 'bgPerUnit')}\n            value={values.bgPerUnit}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><SettingsIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">mmol/l</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"insulinunits__input__targetbg\" style={InputContainer}>\n          <TextField label=\"Target blood glucose\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'targetBg')}\n            onBlur={onBlur.bind(this, 'targetBg')}\n            value={values.targetBg}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><SettingsIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">mmol/l</InputAdornment>,\n            }}\n          />\n        </div>\n\n      </div>\n\n    </section>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { initialState } from './initialState'\n\nconst doUnitMath = (state, stateUpdate) => {\n  Object.assign(state, stateUpdate)\n\n  const carbsPerColumnWeight = state.carbsPerColumnWeight\n  const columnWeight = state.columnWeight\n  const totalPacketWeight = state.totalPacketWeight\n  const totalPieces = state.totalPieces\n  const consumedPieces = state.consumedPieces\n  const minimumCarbs = state.minimumCarbs\n\n  const carbRatio = columnWeight ? (carbsPerColumnWeight / columnWeight) : 0\n  const totalPacketCarbs = carbRatio * totalPacketWeight\n  const carbsPerPiece = totalPieces ? (totalPacketCarbs / totalPieces) : 0\n  const consumedCarbs = (carbsPerPiece * consumedPieces);\n\n  const roundedConsumedCarbs = Math.round(consumedCarbs / minimumCarbs) * minimumCarbs\n\n  Object.assign(state, {\n    carbsPerColumnWeight,\n    columnWeight,\n    totalPacketWeight,\n    totalPieces,\n    consumedPieces,\n    minimumCarbs,\n    carbRatio,\n    totalPacketCarbs,\n    carbsPerPiece,\n    consumedCarbs,\n    roundedConsumedCarbs\n  })\n\n}\n\nconst proportionateCarbsSlice = createSlice({\n  name: 'proportionateCarbs',\n  initialState: initialState.proportionateCarbs,\n  reducers: {\n    allProportionateCarbsChanged(state, action) {\n      doUnitMath(state, action.payload)\n    }\n  }\n})\n\nexport const {\n  allProportionateCarbsChanged\n} = proportionateCarbsSlice.actions\n\nexport default proportionateCarbsSlice.reducer\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Typography, TextField, InputAdornment } from '@material-ui/core'\nimport { titleChanged } from './store/view';\nimport { allProportionateCarbsChanged } from './store/proportionateCarbs'\nimport makeNewState from './utils/makeNewState'\nimport makeStateSetters from './utils/makeStateSetters'\nimport makeOnChanged from './utils/makeOnChanged';\nimport makeOnBlur from './utils/makeOnBlur'\nimport { input as InputStyle, inputContainer as InputContainer, outputContainer as OutputContainer } from './utils/styles';\nimport {\n  Restaurant as RestaurantIcon,\n  ShowChart as ShowChartIcon,\n  FitnessCenter as FitnessCenterIcon,\n  Settings as SettingsIcon,\n  PieChart as PieChartIcon,\n  Info as InfoIcon,\n  Maximize as MaximizeIcon,\n  MenuOpen as MenuOpenIcon,\n  RadioButtonUnchecked as RadioButtonUncheckedIcon,\n  Cake as CakeIcon,\n  DataUsage as DataUsageIcon\n} from '@material-ui/icons'\n\nexport const ProportionateCarbs = () => {\n  const state = useSelector(state => state.proportionateCarbs)\n  const settings = useSelector(state => state.settings)\n  const defaults = makeNewState(state, settings)\n  const [values, setters] = makeStateSetters(defaults)\n  const dispatch = useDispatch()\n  const onChanged = makeOnChanged(state, settings, setters, dispatch, allProportionateCarbsChanged)\n  const onBlur = makeOnBlur(setters, defaults)\n\n  useEffect(() => {\n    dispatch(\n      titleChanged('Carbohydrates')\n    )\n  })\n\n  return (\n    <section className=\"proportionatecarbs\">\n\n      <div className=\"proportionatecarbs__output\" style={OutputContainer}>\n        <Typography variant=\"h2\" noWrap>\n          {state.roundedConsumedCarbs||0}g\n        </Typography>\n      </div>\n\n      <div className=\"proportionatecarbs_input\">\n\n        <div className=\"proportionatecarbs__input__columnweight\" style={InputContainer}>\n          <TextField label=\"Per weight\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'columnWeight')}\n            onBlur={onBlur.bind(this, 'columnWeight')}\n            value={values.columnWeight}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><MaximizeIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">g</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"proportionatecarbs__input__carbspercolumnweight\" style={InputContainer}>\n          <TextField label=\"Carbs per weight\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'carbsPerColumnWeight')}\n            onBlur={onBlur.bind(this, 'carbsPerColumnWeight')}\n            value={values.carbsPerColumnWeight}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><MenuOpenIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">g</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"proportionatecarbs__input__totalpacketweight\" style={InputContainer}>\n          <TextField label=\"Total weight\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'totalPacketWeight')}\n            onBlur={onBlur.bind(this, 'totalPacketWeight')}\n            value={values.totalPacketWeight}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><CakeIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">g</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"proportionatecarbs__input__totalpieces\" style={InputContainer}>\n          <TextField label=\"Pieces\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'totalPieces')}\n            onBlur={onBlur.bind(this, 'totalPieces')}\n            value={values.totalPieces}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><RadioButtonUncheckedIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">{values.consumedPieces}/{values.totalPieces}</InputAdornment>,\n            }}\n          />\n        </div>\n\n        <div className=\"proportionatecarbs__input__consumedpieces\" style={InputContainer}>\n          <TextField label=\"Consumed pieces\"\n            inputProps={{style: InputStyle}}\n            onChange={onChanged.bind(this, 'consumedPieces')}\n            onBlur={onBlur.bind(this, 'consumedPieces')}\n            value={values.consumedPieces}\n            InputProps={{\n              startAdornment: <InputAdornment position=\"start\"><DataUsageIcon /></InputAdornment>,\n              endAdornment: <InputAdornment position=\"end\">{values.consumedPieces}/{values.totalPieces}</InputAdornment>,\n            }}\n          />\n        </div>\n\n      </div>\n\n    </section>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { titleChanged } from './store/view'\n\nexport const Settings = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(\n      titleChanged('Settings')\n    )\n  })\n\n\n  return <div>Under construction</div>\n}\n","import './App.css';\nimport React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport clsx from 'clsx'\nimport { useSelector } from 'react-redux';\nimport { InsulinUnits } from './InsulinUnits';\nimport { ProportionateCarbs } from './ProportionateCarbs';\nimport { Settings } from './Settings'\nimport { AppBar, List, IconButton, Toolbar, Divider, ListItem, ListItemIcon, ListItemText, Drawer, Typography } from '@material-ui/core'\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  ChevronRight as ChevronRightIcon,\n  Menu as MenuIcon,\n  LocalHospitalOutlined as LocalHospitalOutlinedIcon,\n  Restaurant as RestaurantIcon,\n  Settings as SettingsIcon\n} from '@material-ui/icons'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nconst drawerWidth = 160;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: -20,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(0) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(7) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App() {\n  const view = useSelector(state => state.view)\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              {view.title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem button key='Insulin'  component={Link} to=\"/insulinunits\" onClick={handleDrawerClose}>\n              <ListItemIcon><LocalHospitalOutlinedIcon /></ListItemIcon>\n              <ListItemText primary={'Insulin'} />\n            </ListItem>\n            <ListItem button key='Carbs' component={Link} to='/proportionatecarbs' onClick={handleDrawerClose}>\n              <ListItemIcon><RestaurantIcon /></ListItemIcon>\n              <ListItemText primary={'Carbs'} />\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n            <ListItem button key='Settings' component={Link} to='/settings' onClick={handleDrawerClose}>\n                <ListItemIcon><SettingsIcon /></ListItemIcon>\n                <ListItemText primary={'Settings'} />\n            </ListItem>\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route path=\"/insulinunits\">\n              <InsulinUnits />\n            </Route>\n            <Route path=\"/proportionatecarbs\">\n              <ProportionateCarbs />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n            <Redirect to=\"/insulinunits\" />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit'\nimport { initialState } from './initialState'\n\nconst settingsSlice = createSlice({\n  name: 'settings',\n  initialState: initialState.settings,\n  reducers: {}\n})\n\nexport default settingsSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport settingsReducer from './settings'\nimport insulinUnitsReducer from './insulinUnits'\nimport proportionateCarbsReducer from './proportionateCarbs'\nimport viewReducer from './view'\n\nexport default configureStore({\n  reducer: {\n    view: viewReducer,\n    settings: settingsReducer,\n    insulinUnits: insulinUnitsReducer,\n    proportionateCarbs: proportionateCarbsReducer\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}