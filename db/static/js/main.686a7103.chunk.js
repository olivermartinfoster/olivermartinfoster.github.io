(this.webpackJsonpcalculator=this.webpackJsonpcalculator||[]).push([[0],{58:function(t,n,e){},59:function(t,n,e){},71:function(t,n){},75:function(t,n,e){"use strict";e.r(n);var i=e(0),a=e.n(i),s=e(7),r=e.n(s),c=(e(58),e(59),e(48)),u=e(6),l=e(16),o=e(14),b=e(104),d=e(19),g={settings:{consumedCarbs:0,currentBg:5,minimumUnit:.5,carbsPerUnit:9,bgPerUnit:2.9,targetBg:5,unitAdjustmentPercentage:0,carbsPerColumnWeight:0,columnWeight:100,totalPacketWeight:100,totalPieces:8,consumedPieces:8,minimumCarbs:1},insulinUnits:{consumedCarbs:null,currentBg:null,unitAdjustmentPercentage:null,minimumUnit:null,carbsPerUnit:null,bgPerUnit:null,targetBg:null,unitAdjustmentRatio:0,bgDistance:0,bgUnits:0,carbUnits:0,totalUnits:0,adjustedTotalUnits:0,roundedAdjustedTotalUnits:0},proportionateCarbs:{carbsPerColumnWeight:null,columnWeight:null,totalPacketWeight:null,totalPieces:null,consumedPieces:null,minimumCarbs:null,carbRatio:0,weightRatio:0,consumedRatio:0,consumedCarbs:0,roundedConsumedCarbs:0}},j=Object(d.b)({name:"insulinUnits",initialState:g.insulinUnits,reducers:{allInsulinUnitsChanged:function(t,n){!function(t,n){Object.assign(t,n);var e=t.consumedCarbs,i=t.currentBg,a=t.unitAdjustmentPercentage,s=t.targetBg,r=t.carbsPerUnit,c=t.bgPerUnit,u=t.minimumUnit,l=1+a/100,o=i-s,b=c?o/c:0,d=r?e/r:0,g=b+d,j=g*l,m=Math.round(j/u)*u;Object.assign(t,{consumedCarbs:e,currentBg:i,unitAdjustmentPercentage:a,targetBg:s,carbsPerUnit:r,bgPerUnit:c,unitAdjustmentRatio:l,bgDistance:o,bgUnits:b,carbUnits:d,totalUnits:g,adjustedTotalUnits:j,roundedAdjustedTotalUnits:m})}(t,n.payload)}}}),m=j.actions.allInsulinUnitsChanged,h=j.reducer,p=e(103);function O(t){return t=(t=String(t)).replace(/x/i,"*"),Object(p.a)(t)}function C(t,n){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i={};for(var a in e)e[a]=O(e[a]);for(var s in t){var r,c;i[s]=null!==(r=null!==(c=e[s])&&void 0!==c?c:t[s])&&void 0!==r?r:n[s]}return i}function P(t){var n={},e={};for(var a in t){var s=Object(i.useState)(t[a]),r=Object(o.a)(s,2);n[a]=r[0],e[a]=r[1]}return[n,e]}var v=e(43);function _(t,n,e,i,a){return function(s,r){var c=r.target.value;e[s](c);try{i(a(C(t,n,Object(v.a)({},s,c||n[s]))))}catch(u){}}}function x(t,n){return function(e,i){""===i.target.value&&t[e](n[e])}}var U=e(3),B=void 0,f=function(){var t=Object(l.c)((function(t){return t.insulinUnits})),n=Object(l.c)((function(t){return t.settings})),e=C(t,n),i=P(e),a=Object(o.a)(i,2),s=a[0],r=a[1],c=_(t,n,r,Object(l.b)(),m),u=x(r,e);return Object(U.jsxs)("section",{className:"insulinunits",children:[Object(U.jsxs)("div",{className:"insulinunits__output",children:[Object(U.jsx)("div",{children:"Insulin calculator"}),t.roundedAdjustedTotalUnits||0,"units"]}),Object(U.jsxs)("div",{className:"insulinunits_input",children:[Object(U.jsx)("div",{className:"insulinunits__input__consumedcarbs",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Carbs (g)",onChange:c.bind(B,"consumedCarbs"),onBlur:u.bind(B,"consumedCarbs"),value:s.consumedCarbs})}),Object(U.jsx)("div",{className:"insulinunits__input__currentbg",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Current Bg (mmol/l)",onChange:c.bind(B,"currentBg"),onBlur:u.bind(B,"currentBg"),value:s.currentBg})}),Object(U.jsx)("div",{className:"insulinunits__input__unitadjustmentpercentage",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Adjustment %",onChange:c.bind(B,"unitAdjustmentPercentage"),onBlur:u.bind(B,"unitAdjustmentPercentage"),value:s.unitAdjustmentPercentage})}),Object(U.jsx)("div",{className:"insulinunits__input__carbsperunit",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Carbs per unit (g)",onChange:c.bind(B,"carbsPerUnit"),onBlur:u.bind(B,"carbsPerUnit"),value:s.carbsPerUnit})}),Object(U.jsx)("div",{className:"insulinunits__input__bgperunit",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Bg per unit (mmol/l)",onChange:c.bind(B,"bgPerUnit"),onBlur:u.bind(B,"bgPerUnit"),value:s.bgPerUnit})}),Object(U.jsx)("div",{className:"insulinunits__input__targetbg",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Target Bg (mmol/l)",onChange:c.bind(B,"targetBg"),onBlur:u.bind(B,"targetBg"),value:s.targetBg})})]})]})},W=Object(d.b)({name:"proportionateCarbs",initialState:g.proportionateCarbs,reducers:{allProportionateCarbsChanged:function(t,n){!function(t,n){Object.assign(t,n);var e=t.carbsPerColumnWeight,i=t.columnWeight,a=t.totalPacketWeight,s=t.totalPieces,r=t.consumedPieces,c=t.minimumCarbs,u=i?e/i:0,l=i?a/i:0,o=s?r/s:0,b=u*l*o*a,d=Math.round(b/c)*c;Object.assign(t,{carbsPerColumnWeight:e,columnWeight:i,totalPacketWeight:a,totalPieces:s,consumedPieces:r,minimumCarbs:c,carbRatio:u,weightRatio:l,consumedRatio:o,consumedCarbs:b,roundedConsumedCarbs:d})}(t,n.payload)}}}),N=W.actions.allProportionateCarbsChanged,A=W.reducer,k=void 0,w=function(){var t=Object(l.c)((function(t){return t.proportionateCarbs})),n=Object(l.c)((function(t){return t.settings})),e=C(t,n),i=P(e),a=Object(o.a)(i,2),s=a[0],r=a[1],c=_(t,n,r,Object(l.b)(),N),u=x(r,e);return Object(U.jsxs)("section",{className:"proportionatecarbs",children:[Object(U.jsxs)("div",{className:"proportionatecarbs__output",children:[Object(U.jsx)("div",{children:"Consumed carbohydrates"}),t.roundedConsumedCarbs||0,"g"]}),Object(U.jsxs)("div",{className:"proportionatecarbs_input",children:[Object(U.jsx)("div",{className:"proportionatecarbs__input__columnweight",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Per weight (g)",onChange:c.bind(k,"columnWeight"),onBlur:u.bind(k,"columnWeight"),value:s.columnWeight})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__carbspercolumnweight",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Carbs per weight (g)",onChange:c.bind(k,"carbsPerColumnWeight"),onBlur:u.bind(k,"carbsPerColumnWeight"),value:s.carbsPerColumnWeight})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__totalpacketweight",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Total weight (g)",onChange:c.bind(k,"totalPacketWeight"),onBlur:u.bind(k,"totalPacketWeight"),value:s.totalPacketWeight})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__totalpieces",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Pieces",onChange:c.bind(k,"totalPieces"),onBlur:u.bind(k,"totalPieces"),value:s.totalPieces})}),Object(U.jsx)("div",{className:"proportionatecarbs__input__consumedpieces",children:Object(U.jsx)(b.a,{id:"standard-basic",label:"Consumed pieces",onChange:c.bind(k,"consumedPieces"),onBlur:u.bind(k,"consumedPieces"),value:s.consumedPieces})})]})]})},T=Object(d.b)({name:"settings",initialState:g.settings,reducers:{}}).reducer,R=Object(d.a)({reducer:{settings:T,insulinUnits:h,proportionateCarbs:A}});var S=function(){return Object(U.jsx)(l.a,{store:R,children:Object(U.jsx)(c.a,{children:Object(U.jsx)("div",{className:"App",children:Object(U.jsxs)(u.c,{children:[Object(U.jsx)(u.a,{path:"/insulinunits",children:Object(U.jsx)(f,{})}),Object(U.jsx)(u.a,{path:"/proportionatecarbs",children:Object(U.jsx)(w,{})})]})})})})},y=function(t){t&&t instanceof Function&&e.e(3).then(e.bind(null,105)).then((function(n){var e=n.getCLS,i=n.getFID,a=n.getFCP,s=n.getLCP,r=n.getTTFB;e(t),i(t),a(t),s(t),r(t)}))};r.a.render(Object(U.jsx)(a.a.StrictMode,{children:Object(U.jsx)(S,{})}),document.getElementById("root")),y()}},[[75,1,2]]]);
//# sourceMappingURL=main.686a7103.chunk.js.map